# Предложить улучшения кода для уже решённых задач:
# С помощью использования **лямбд, filter, map, zip, enumerate, list comprehension
# В этом случае можно пропустить совсем тривиальные (т.е. задачу 1 или 2 тут точно
# решать не имеет смысла) - исходите из уровня группы и студента.

# 1.Напишите программу, которая принимает на вход вещественное число
# и показывает сумму его цифр.

# num = input('Введите вещественное число: ')
# num = num.replace('.', '').replace('-', '')
# summa = sum(list(map(int, [el for el in num])))
# print(summa)

# 2.Напишите программу, которая принимает на вход число N и выдает набор
# # произведений чисел от 1 до N.

# Пример:
# - пусть N = 4, тогда [ 1, 2, 6, 24 ] (1, 1*2, 1*2*3, 1*2*3*4)

# N = int(input('Введите целое число N: '))
# f = lambda x: 1 if x == 1 else x * f(x - 1)
# some_list = list(f(i) for i in range(1, N + 1))
# print(some_list)

# 3.Задайте список из n чисел последовательности (1 + 1/n)^n, выведите его на экран,
# а так же сумму элементов списка.

# Пример:
# Для n=4 -> [2, 2.25, 2.37, 2.44]
# Сумма 9.06

# n = int(input('Введите целое число n: '))
# some_list = [round((1 + 1 / i) ** i, 2) for i in range(1, n + 1)]
# summa = sum(el for el in some_list)
# print(some_list, f'сумма элементов равна {summa}')